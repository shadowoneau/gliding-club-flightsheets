<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Tx+FdVc1plbTgSQMzMxnXjIjUj2V1OmLZH//2Q==
</value>
  </data>
</root>